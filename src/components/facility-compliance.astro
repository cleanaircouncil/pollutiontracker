---
import Permit from "./permit.astro";

const { facility = {} } = Astro.props;
const hasComplianceData =
  facility.echo_compliance ||
  facility.totalPenalties ||
  facility.dep_violations;

const sources = [
  {
    link: "ECHO",
    href: facility.epa_link,
  },

  {
    link: "DEP",
    href: facility.dep_link,
  },
].filter((sources) => sources.href);
---

{
  hasComplianceData && (
    <section class="stack">
      <h3>Current Permits and Compliance</h3>

      <div class="grid columns-three gap-tight">
        {facility.totalPenalties && (
          <div class="box swatch-black" style="--span-columns: 3">
            <i class="fa fa-landmark-flag" />{" "}
            <strong>{facility.totalPenalties}</strong> in federal penalties in
            the last 5 years
          </div>
        )}

        {facility.dep_violations && (
          <div class="box swatch-black" style="--span-columns: 3">
            <i class="fa fa-triangle-exclamation" />{" "}
            <strong>{facility.dep_violations.violation_count}</strong>{" "}
            environmental violations since
            <strong>{facility.dep_violations.since}</strong>
          </div>
        )}
        {facility.echo_compliance?.map((permit) => (
          <Permit permit={permit} style="card" />
        ))}
      </div>

      {sources.length && (
        <div class="text text-detail">
          { sources.length == 1 ? "Source: " : "Sources: "}
          {sources
            .map(({ link, href }) => (
              <a target="_blank" href={href}>
                {link}&nbsp;
                <i class="fa-solid fa-arrow-up-right-from-square" />
              </a>
            ))
            .reduce((stems, current, index, array) => {
              const shouldInsert = array.length > 1 && index == 1;

              if (shouldInsert) stems.push(" and ");

              stems.push(current);
              return stems;
            }, [])}
        </div>
      )}
    </section>
  )
}
