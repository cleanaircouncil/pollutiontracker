---
import Eyebrow from "./eyebrow.astro";
import Highlight from "./highlight.astro";
import Permit from "./permit.astro";

const { facility = {} } = Astro.props;
---

<article
  id={facility.slug}
  class="facility-card stack"
  data-facility-card
  data-name={facility.company_name}
  data-address={facility.address}
  data-status={facility.alert ? "alert" : ""}
>
  <header class="stack-tight">
    <Eyebrow facility={facility} />

    <hgroup>
      <h3>
        <a href={`#${facility.slug}`} class="link-block">
          <Highlight text={facility.company_name} />
        </a>
      </h3>

      <p class="text-detail">
        <strong>{facility.description}</strong>
      </p>

      <p class="text-detail">
        <i class="fa fa-location-dot color-gray-dark"></i>
        <Highlight text={facility.address} />
      </p>
    </hgroup>
  </header>

  {
    facility.echo_compliance?.length > 0 && (
      <footer class="grid columns-three gap-tight">
        {facility.echo_compliance.map((permit) => (
          <Permit permit={permit} style="pill" />
        ))}
      </footer>
    )
  }
</article>

<script>
  import { listen } from "../helpers/events";
  import { resultCount } from "../helpers/store";

  function toggleFacilityCard(searchTerm) {
    const query = searchTerm.trim().toLowerCase().split(/\s+/);

    const cards = document.querySelectorAll("[data-facility-card]");
    const highlights = document.querySelectorAll("[data-highlight]");

    cards.forEach((card) => {
      if (!(card instanceof HTMLElement)) return;

      const termMatch = (term) =>
        card.dataset.name.toLowerCase().includes(term) ||
        card.dataset.address.toLowerCase().includes(term);

      const match = !query.length || query.every(termMatch);
      card.toggleAttribute("hidden", !match);
    });

    highlights.forEach((highlight) => {
      highlight.setAttribute("data-highlight", searchTerm || "");
    });

    resultCount.set(
      document.querySelectorAll("[data-facility-card]:not([hidden])").length
    );
  }

  listen("search", (e) => toggleFacilityCard(e.detail.value));
</script>

<style>
  .facility-card {
    background: var(--color-white);
    border: 1px solid var(--color-white);
    /* min-width: 350px; */
    flex: 0 0 auto;
    padding: 0.5rem;
    overflow: hidden;
    scroll-margin-top: 2rem;
    cursor: pointer;
    position: relative;
    border-radius: 0.5rem;
  }

  .facility-card:target {
    border-color: var(--color-accent);
  }

  .facility-card:hover {
    background: #eeeeee;
  }

  .facility-card[data-status="alert"] {
    border: 2px solid var(--color-danger);
  }

  .link-block::after {
    content: "";
    display: block;
    position: absolute;
    inset: 0px;
  }

  .facility-card__heading {
    text-wrap: pretty;
  }

  .facility-card__echo-link {
    text-align: right;
  }
</style>
