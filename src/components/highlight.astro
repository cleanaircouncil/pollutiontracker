---
const { text = "" } = Astro.props;
---

<span data-highlight data-text={text}>{text}</span>

<style is:global>
  [data-highlighted] {
    background-color: yellow;
    padding: 0.125em;
    margin: -0.125em;
  }
</style>

<script>  
  const observer = new MutationObserver((records) => {
    for (const record of records) {
      if (!(record.target instanceof HTMLElement)) continue;

      const target = record.target;
      const highlight = target.dataset.highlight ?? "";
      const terms = highlight.split(/\s+/).filter((x) => x);
      const text = target.dataset.text;

      const escapeRegExp = (str) => str.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      const pattern = terms.map(escapeRegExp).join("|");
      const regex = new RegExp(`(${pattern})`, "gi");

      const newHTML = highlight ? text.replace(regex, `<span data-highlighted>$1</span>`) : text;

      target.innerHTML = newHTML;
    }
  });

  observer.observe(document.body, {
    subtree: true,
    attributes: true,
    attributeFilter: ["data-highlight"],
  });
</script>
